# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
      MACOSX_DEPLOYMENT_TARGET: "10.9"
      #CC: gcc
      #CXX: g++
      #VCRE2_DIR: C:\vcpkg\packages\re2_x64-windows\
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    #- name: Add 64-bit mingw-w64 to the PATH
      #run: |
        #echo "c:/msys64/bin;c:/msys64/mingw64/bin" >> $GITHUB_PATH
      #if: startsWith(matrix.os, 'win')

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Prepare compiler environment for Windows
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Update vcpkg
      run: |
        cd C:\vcpkg
        git pull
        .\\bootstrap-vcpkg.bat
        cd ${{ runner.workspace }}
      if: startsWith(matrix.os, 'win')

    - name: Install deps with vcpkg
      run: |
        vcpkg install re2:x64-windows pybind11:x64-windows
        vcpkg integrate install
      if: startsWith(matrix.os, 'win')

    - name: Install deps with brew
      run: |
        brew install pybind11
        brew install -s re2
      if: startsWith(matrix.os, 'mac')
    - name: Install PPA and build deps
      if: runner.os == 'Linux'
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y -s ppa:nerdboy/embedded
        sudo apt-get install -y pybind11-dev libre2-dev ninja-build
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install tox

    # This makes two environment variables available in the following step(s)
    - name: Set Windows environment variables
      if: runner.os == 'Windows'
      run: |
        .github/workflows/vs_env.bat x64
        source env.sh
        echo "CMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake" >> $GITHUB_ENV
        echo $CMAKE_TOOLCHAIN_FILE
        # echo "DISTUTILS_USE_SDK=1" >> $GITHUB_ENV
        # echo "MSSdk=1" >> $GITHUB_ENV

    - name: Test in place
      run: |
        tox -e py
    - name: Install and test
      run: |
        # rm -rf build/*
        tox -e dev
    - name: Build dist pkgs
      run: |
        tox -e deploy
